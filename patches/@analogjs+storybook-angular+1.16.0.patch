diff --git a/node_modules/@analogjs/storybook-angular/package.json b/node_modules/@analogjs/storybook-angular/package.json
index aaa6e9d..0196603 100644
--- a/node_modules/@analogjs/storybook-angular/package.json
+++ b/node_modules/@analogjs/storybook-angular/package.json
@@ -27,7 +27,7 @@
       "import": "./src/index.js",
       "require": "./src/index.js"
     },
-    "./preset": "./src/preset.js",
+    "./preset": "./preset.mjs",
     "./package.json": "./package.json",
     "./*": "./src/*"
   },
diff --git a/node_modules/@analogjs/storybook-angular/preset.mjs b/node_modules/@analogjs/storybook-angular/preset.mjs
new file mode 100644
index 0000000..3e08410
--- /dev/null
+++ b/node_modules/@analogjs/storybook-angular/preset.mjs
@@ -0,0 +1,55 @@
+import { dirname, join } from 'node:path';
+import { createRequire } from 'node:module';
+import { core as PresetCore } from '@storybook/angular/dist/preset.js';
+const require = createRequire(import.meta.url);
+const getAbsolutePath = (input) => dirname(require.resolve(join(input, 'package.json')));
+export const core = async (config, options) => {
+    const presetCore = PresetCore(config, options);
+    return {
+        ...presetCore,
+        builder: {
+            name: getAbsolutePath('@storybook/builder-vite'),
+            options: { ...presetCore.options },
+        },
+    };
+};
+export const viteFinal = async (config, options) => {
+    // Merge custom configuration into the default config
+    const { mergeConfig } = await import('vite');
+    const { default: angular } = await import('@analogjs/vite-plugin-angular');
+    // @ts-ignore
+    const framework = await options.presets.apply('framework');
+    return mergeConfig(config, {
+        // Add dependencies to pre-optimization
+        optimizeDeps: {
+            include: [
+                '@storybook/angular/dist/client/index.js',
+                '@analogjs/storybook-angular',
+                '@angular/compiler',
+                '@angular/platform-browser/animations',
+                '@storybook/addon-docs/angular',
+                'react/jsx-dev-runtime',
+                'tslib',
+                'zone.js',
+            ],
+        },
+        plugins: [
+            angular({
+                jit: typeof framework.options?.jit !== 'undefined'
+                    ? framework.options?.jit
+                    : true,
+                liveReload: typeof framework.options?.liveReload !== 'undefined'
+                    ? framework.options?.liveReload
+                    : false,
+                tsconfig: options?.tsConfig ?? './.storybook/tsconfig.json',
+            }),
+        ],
+        define: {
+            STORYBOOK_ANGULAR_OPTIONS: JSON.stringify({
+                experimentalZoneless: !!options?.angularBuilderOptions?.experimentalZoneless,
+            }),
+        },
+    });
+};
+export { addons, previewAnnotations } from '@storybook/angular/dist/preset.js';
+//# sourceMappingURL=preset.js.map
\ No newline at end of file
diff --git a/node_modules/@analogjs/storybook-angular/src/preset.js b/node_modules/@analogjs/storybook-angular/src/preset.js
deleted file mode 100644
index 37c4e19..0000000
--- a/node_modules/@analogjs/storybook-angular/src/preset.js
+++ /dev/null
@@ -1,93 +0,0 @@
-"use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
-    Object.defineProperty(o, "default", { enumerable: true, value: v });
-}) : function(o, v) {
-    o["default"] = v;
-});
-var __importStar = (this && this.__importStar) || (function () {
-    var ownKeys = function(o) {
-        ownKeys = Object.getOwnPropertyNames || function (o) {
-            var ar = [];
-            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
-            return ar;
-        };
-        return ownKeys(o);
-    };
-    return function (mod) {
-        if (mod && mod.__esModule) return mod;
-        var result = {};
-        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
-        __setModuleDefault(result, mod);
-        return result;
-    };
-})();
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.previewAnnotations = exports.addons = exports.viteFinal = exports.core = void 0;
-const node_path_1 = require("node:path");
-const preset_js_1 = require("@storybook/angular/dist/preset.js");
-const getAbsolutePath = (input) => (0, node_path_1.dirname)(require.resolve((0, node_path_1.join)(input, 'package.json')));
-const core = async (config, options) => {
-    const presetCore = preset_js_1.core(config, options);
-    return {
-        ...presetCore,
-        builder: {
-            name: getAbsolutePath('@storybook/builder-vite'),
-            options: { ...presetCore.options },
-        },
-    };
-};
-exports.core = core;
-const viteFinal = async (config, options) => {
-    // Merge custom configuration into the default config
-    const { mergeConfig } = await Promise.resolve().then(() => __importStar(require('vite')));
-    const { default: angular } = await Promise.resolve().then(() => __importStar(require('@analogjs/vite-plugin-angular')));
-    // @ts-ignore
-    const framework = await options.presets.apply('framework');
-    return mergeConfig(config, {
-        // Add dependencies to pre-optimization
-        optimizeDeps: {
-            include: [
-                '@storybook/angular/dist/client/index.js',
-                '@analogjs/storybook-angular',
-                '@angular/compiler',
-                '@angular/platform-browser/animations',
-                '@storybook/addon-docs/angular',
-                'react/jsx-dev-runtime',
-                'tslib',
-                'zone.js',
-            ],
-        },
-        plugins: [
-            angular({
-                jit: typeof framework.options?.jit !== 'undefined'
-                    ? framework.options?.jit
-                    : true,
-                liveReload: typeof framework.options?.liveReload !== 'undefined'
-                    ? framework.options?.liveReload
-                    : false,
-                tsconfig: options?.tsConfig ?? './.storybook/tsconfig.json',
-            }),
-        ],
-        define: {
-            STORYBOOK_ANGULAR_OPTIONS: JSON.stringify({
-                experimentalZoneless: !!options?.angularBuilderOptions?.experimentalZoneless,
-            }),
-        },
-    });
-};
-exports.viteFinal = viteFinal;
-var preset_js_2 = require("@storybook/angular/dist/preset.js");
-Object.defineProperty(exports, "addons", { enumerable: true, get: function () { return preset_js_2.addons; } });
-Object.defineProperty(exports, "previewAnnotations", { enumerable: true, get: function () { return preset_js_2.previewAnnotations; } });
-//# sourceMappingURL=preset.js.map
\ No newline at end of file
